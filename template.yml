AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Esercizio03

  Sample SAM Template for Esercizio03

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  CounterFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: counter/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      Events:
        Counter:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /counter
            Method: post

  StartLambda:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: StartLambda
      RedrivePolicy:
        deadLetterTargetArn : !GetAtt StartLambdaDlq.Arn
        maxReceiveCount: 3

  StartLambdaDlq:
    Type: AWS::SQS::Queue

  SQSRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - sqs.amazonaws.com
          Action:
          - "sts:AssumeRole"
      Path: "/"
      Policies:
      - PolicyName: SQSPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - SQS:SendMessage
            - SQS:ReceiveMessage
            - SQS:DeleteMessage
            - SQS:GetQueueUrl
            Resource:
            - !GetAtt StartLambdaDlq.Arn

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api

  CounterApi:
    Description: API Gateway endpoint URL for Prod stage for Counter function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/counter/"

  CounterFunction:
    Description: Counter Lambda Function ARN
    Value: !GetAtt CounterFunction.Arn
  
  CounterFunctionIamRole:
    Description: Implicit IAM Role created for Counter function
    Value: !GetAtt CounterFunctionRole.Arn