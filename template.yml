AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Esercizio03

  SQS-DLQ con integrazione diretta tramite api gateway

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  SendMessageFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      Events:
        SendMessage:
          Type: SQS # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Queue: !GetAtt MessageQueue.Arn
            BatchSize: 10 # Messaggi presi per volta
            FunctionResponseTypes:
              - ReportBatchItemFailures

  MessageQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: MessageQueue
      RedrivePolicy:
        deadLetterTargetArn : !GetAtt MessageQueueDLQ.Arn
        maxReceiveCount: 3

  MessageQueueDLQ:
    Type: AWS::SQS::Queue

  SQSRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action: "sts:AssumeRole"
      Policies:
      - PolicyName: SQSPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt SendMessageFunction.Arn

  SendMessageAPI:
    Type: AWS::Serverless::Api #open api 3.0.1
    Properties:
      StageName: dev
      OpenApiVersion: '3.0.1'
      Name: "SendMessageAPI"
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./api.yml

# Outputs:
#   ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
#   Find out more about other implicit resources you can reference within SAM
#   https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api

#   SendMessageApi:
#     Description: API Gateway endpoint URL for Prod stage for SendMessage function
#     Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/SendMessage/"

#   SendMessageFunction:
#     Description: SendMessage Lambda Function ARN
#     Value: !GetAtt SendMessageFunction.Arn
  
#   SendMessageFunctionIamRole:
#     Description: Implicit IAM Role created for SendMessage function
#     Value: !GetAtt SendMessageFunctionRole.Arn